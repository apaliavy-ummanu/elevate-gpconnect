# OpenAPI 3.0.3 — GP Connect Update Record Gateway (poc)

openapi: 3.0.3
info:
  title: GP Connect Update Record Gateway
  version: "1.2.0"
  description: |
    Gateway for GP Connect API over MESH (ITK3 + FHIR STU3).
    Payload supports full content; minimal must-haves are marked `required`.

servers:
  - url: https://api.example.com

security:
  - ApiKeyAuth: []

paths:
  /api/messages/update-record:
    post:
      summary: REST API endpoint to send GP Connect Update Record message over MESH
      description: |
        Accepts a domain-friendly JSON, builds an ITK3/FHIR Message (MessageHeader + ITK Document Bundle),
        sets MESH workflow/routing, and sends. Returns an async tracking id.
      operationId: SendUpdateRecordMessage
      parameters:
        - in: header
          name: X-Correlation-ID
          description: Optional correlation id echoed in logs and responses.
          schema: { type: string, maxLength: 128 }
        - in: header
          name: Idempotency-Key
          description: |
            An optional idempotency key. If a prior request with the same key succeeded,
            the same 202 response is returned. If body differs → 409 is returned.
          schema: { type: string, maxLength: 128 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecordRequest'
            examples:
              minimal:
                summary: Minimal viable request
                value:
                  sender: { odsCode: "A12345" }
                  composition:
                    type: { system: "http://snomed.info/sct", code: "371531000", display: "Clinical consultation report" }
                    title: "GP Consultation Note"
                  patient:
                    nhsNumber: "9434765919"
                    name: { text: "Jane Smith", family: "Smith", given: "Jane" }
                    dateOfBirth: "1988-07-23"
                    gender: "female"
                  practitioner:
                    identifier: { system: "https://fhir.nhs.uk/Id/sds-user-id", value: "G1234567" }
                    name: { text: "Dr John Doe", family: "Doe", given: "John" }
                    gender: "male"
                  organisation:
                    identifier: { system: "https://fhir.nhs.uk/Id/ods-organization-code", value: "A12345" }
                    name: "Example GP Practice"
                  encounter:
                    identifier: { system: "urn:ietf:rfc:3986", value: "urn:uuid:2e7b0d6e-63f5-4bf0-a3f6-1c6c8fc0a9c1" }
                    status: "finished"
                    encounterType: { system: "http://snomed.info/sct", code: "185316007", display: "Telephone encounter" }
                    patientNhsNumber: "9434765919"
                    participants:
                      - role: "REC"
                        individual: { identifier: { system: "https://fhir.nhs.uk/Id/sds-user-id", value: "G1234567" } }
                  clinicalImpression:
                    status: "completed"
                    summary: "Left knee pain improving; likely patellofemoral pain syndrome."
                    effective:
                      start: "2025-09-14T09:00:00Z"
                      end: "2025-09-14T09:15:00Z"
                    problem:
                      - system: "http://snomed.info/sct"
                        code: "16269008"
                        display: "Pain in knee"
                    finding:
                      - item:
                          system: "http://snomed.info/sct"
                          code: "27113001"
                          display: "Tenderness"
                        basis: "Mild peri-patellar tenderness on palpation."
      responses:
        "202":
          description: Accepted for delivery (queued/sending to MESH).
          headers:
            X-Correlation-ID:
              schema: { type: string }
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MeshMessage' }
        "400":
          description: Validation error (missing fields or bad formats).
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }
        "409":
          description: Idempotency conflict (same key, different body).
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }
        "422":
          description: FHIR/profile validation failed when assembling the message.
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }
        "500":
          description: Internal server error.
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }

  /api/messages/fhir:
    post:
      summary: Send generic FHIR message to GP Connect over MESH
      operationId: SendFHIRMessage
      parameters:
        - in: header
          name: X-Correlation-ID
          description: Optional correlation id echoed in logs and responses.
          schema: { type: string, maxLength: 128 }
        - in: header
          name: Idempotency-Key
          description: |
            An optional idempotency key. If a prior request with the same key succeeded,
            the same 202 response is returned. If body differs → 409 is returned.
          schema: { type: string, maxLength: 128 }
      requestBody:
        required: true
        content:
          application/fhir+xml:
            schema:
              type: string
              format: xml
              description: A complete FHIR STU3 Message Bundle.
            examples:
              nhsExampleSnippet:
                summary: NHS ITK3 Message Bundle (truncated)
                value: |
                  <?xml version="1.0" encoding="UTF-8"?>
                  <Bundle xmlns="http://hl7.org/fhir">
                    <type value="message"/>
                    <!-- ... full MessageHeader, Organization, inner document Bundle, etc. ... -->
                  </Bundle>
          # Some clients only emit application/xml; accept it too.
          application/xml:
            schema:
              type: string
              format: xml
              description: A complete FHIR STU3 Message Bundle (same as application/fhir+xml).
      responses:
        "202":
          description: Accepted for delivery (queued/sending to MESH).
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MeshMessage' }
        "400":
          description: Validation error (missing fields or bad formats).
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }
        "409":
          description: Idempotency conflict (same key, different body).
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }
        "422":
          description: FHIR/profile validation failed when assembling the message.
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }
        "500":
          description: Internal server error.
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }

  /api/messages/{messageId}:
    get:
      summary: Get message details (delivery status, etc)
      operationId: GetMessageById
      parameters:
        - in: path
          name: messageId
          required: true
          description: Server-assigned message id returned by the send endpoint.
          schema: { type: string }
      responses:
        '200':
          description: Current status of the message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshMessage'
        "400":
          description: Validation error
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }
        "404":
          description: Message with given identifier not found
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }
        "500":
          description: Internal server error.
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }

  /api/health:
    get:
      summary: Liveness/Readiness probe
      description: Returns overall service health
      operationId: GetHealthStatus
      security: []
      responses:
        '200':
          description: Service is healthy
        "500":
          description: Internal server error.
          content: { application/json: { schema: { $ref: '#/components/schemas/ErrorResponse' } } }

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    # =======================
    # Root Request
    # =======================
    UpdateRecordRequest:
      type: object
      description: Full payload; minimal must-haves are required.
      required:
        - sender
        - composition
        - patient
        - practitioner
        - organisation
        - encounter
        - clinicalImpression
      properties:
        sender:             { $ref: '#/components/schemas/Sender' }
        composition:        { $ref: '#/components/schemas/CompositionDetails' }
        patient:            { $ref: '#/components/schemas/Patient' }
        practitioner:       { $ref: '#/components/schemas/Practitioner' }
        organisation:       { $ref: '#/components/schemas/Organisation' }
        encounter:          { $ref: '#/components/schemas/Encounter' }
        clinicalImpression: { $ref: '#/components/schemas/ClinicalImpression' }

    # =======================
    # Core & Shared Types
    # =======================
    Identifier:
      type: object
      description: |
        A business identifier (FHIR-like). Examples:
        - SDS User ID: https://fhir.nhs.uk/Id/sds-user-id
        - ODS Org Code: https://fhir.nhs.uk/Id/ods-organization-code
        - URN/UUID: urn:ietf:rfc:3986 (value = urn:uuid:...)
      required: [ system, value ]
      properties:
        system:
          type: string
          format: uri
          description: Identifier system URI.
        value:
          type: string
          description: Identifier value assigned in that system.

    CodeableConcept:
      type: object
      description: Minimised CodeableConcept variant for common coded fields.
      required: [ system, code ]
      properties:
        system:  { type: string, format: uri, description: "Coding system (e.g., http://snomed.info/sct)" }
        code:    { type: string, description: "Code in the specified system." }
        display: { type: string, description: "Human-readable display for the code." }

    CodedItem:
      type: object
      description: |
        Convenience type for places where CodeableConcept-or-text is acceptable.
        If `text` is present, it can be used as narrative when code is unavailable.
      required: [ system, code ]
      properties:
        system:  { type: string, format: uri }
        code:    { type: string }
        display: { type: string }
        text:    { type: string }

    Period:
      type: object
      description: |
        A time period defined by a start and end datetime.
        - If only `start` → period is ongoing from that date.
        - If only `end` → period is prior to that date.
        - If both present → `end` MUST NOT be before `start` (server-side validation).
      properties:
        start: { type: string, format: date-time, description: "Starting time (inclusive)." }
        end:   { type: string, format: date-time, description: "End time (inclusive)." }
      example:
        start: "2025-09-14T09:00:00Z"
        end:   "2025-09-14T09:15:00Z"

    Name:
      type: object
      required: [ name ]
      description: Human name structure (subset of FHIR HumanName).
      properties:
        use:
          type: string
          description: |
            Name use (e.g., usual, official). Free text for POC; server may map to FHIR enum.
        text:   { type: string, description: "Full name rendered as text." }
        family: { type: string }
        given:  { type: string }
        prefix: { type: string }

    # =======================
    # Parties
    # =======================
    Sender:
      type: object
      required: [ odsCode ]
      properties:
        odsCode:
          type: string
          description: ODS organisation code of the sending practice (e.g., A12345).

    Patient:
      type: object
      required: [ nhsNumber, name, dateOfBirth ]
      properties:
        nhsNumber:
          type: string
          pattern: '^\d{10}$'
          description: |
            NHS Number (10 digits). Modulus-11 check is enforced server-side.
        name:
          $ref: '#/components/schemas/Name'
        dateOfBirth:
          type: string
          format: date
          description: ISO 8601 calendar date of birth.
        gender:
          type: string
          description: |
            Administrative gender. Free text for POC; server maps to FHIR `male|female|other|unknown`.
        # NOTE: Addresses/telecoms omitted in POC; add if needed

    Practitioner:
      type: object
      required: [ identifier, name ]
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/Name'
        gender:
          type: string
          description: Optional; same semantics as Patient.gender.

    PractitionerRole:
      type: object
      description: Optional role details for the practitioner.
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        # TODO: Add org link or specialty if required by consumers.

    Organisation:
      type: object
      required: [ identifier, name ]
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
          description: Legal/registered practice name.

    # =======================
    # Clinical Content
    # =======================
    ClinicalImpression:
      type: object
      description: |
        A concise assessment/impression from the consultation (FHIR STU3-like subset).
        # CHANGE: New schema; optional in request but recommended for clinical value.
      properties:
        status:
          type: string
          enum: [ in-progress, completed, entered-in-error ]
          description: Workflow status for the impression (mapped to FHIR).
        summary:
          type: string
          maxLength: 2000
          description: Short narrative summary of clinical impression/assessment.
        description:
          type: string
          maxLength: 8000
          description: Longer free-text narrative if needed.
        effective:
          $ref: '#/components/schemas/Period'
        problem:
          type: array
          description: Problems/conditions considered (e.g., SNOMED).
          items: { $ref: '#/components/schemas/CodeableConcept' }
        finding:
          type: array
          description: Positive/negative findings relevant to the impression.
          items:
            $ref: '#/components/schemas/ClinicalImpressionFinding'

    ClinicalImpressionFinding:
      type: object
      required: [ item ]
      properties:
        item:
          $ref: '#/components/schemas/CodeableConcept'
        basis:
          type: string
          maxLength: 2000
          description: Evidence or rationale for the finding.

    # =======================
    # Encounter
    # =======================
    Encounter:
      type: object
      description: Context of the consultation.
      required: [ identifier, status, encounterType, patientNhsNumber, participants ]
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        status:
          type: string
          enum: [ finished, unknown ]
          description: |
            Minimal status set for Update Record context. Server may map to FHIR Encounter.status.
        class:
          type: string
          description: Optional high-level class (e.g., outpatient, virtual). Free text; server maps if needed.
        encounterType:
          $ref: '#/components/schemas/CodeableConcept'
        serviceType:
          $ref: '#/components/schemas/CodeableConcept'
        period:
          $ref: '#/components/schemas/Period'
        patientNhsNumber:
          type: string
          pattern: '^\d{10}$'
          description: Redundant convenience field mirroring Patient.nhsNumber; server checks consistency.
        participants:
          type: array
          minItems: 1
          items: { $ref: '#/components/schemas/EncounterParticipant' }
          description: |
            MUST include exactly one role=REC (recorder).
            MAY include at most one role=PPRF (primary performer).
            Others MUST be role=PART.
            (Server-side cardinality validation.)
      # NOTE: Diagnosis, reasonCode, and location omitted for POC; add if routing requires.

    EncounterParticipant:
      type: object
      required: [ role, individual ]
      properties:
        role:
          type: string
          enum: [ REC, PPRF, PART ]
          description: |
            REC = recorder (mandatory, exactly one);
            PPRF = primary performer (optional, at most one);
            PART = additional participant(s).
        period:
          $ref: '#/components/schemas/Period'
        individual:
          $ref: '#/components/schemas/IndividualRef'

    IndividualRef:
      description: |
        Reference to a participant individual. Either provide your internal Practitioner id
        or a business Identifier. Server resolves to Practitioner/RelatedPerson in FHIR.
      oneOf:
        - type: object
          required: [ practitionerId ]
          properties:
            practitionerId:
              type: string
              description: Your internal Practitioner id (or UUID used in this request bundle).
        - type: object
          required: [ identifier ]
          properties:
            identifier:
              $ref: '#/components/schemas/Identifier'

    # =======================
    # Composition
    # =======================
    CompositionDetails:
      type: object
      description: Document-level metadata for the inner Composition.
      required: [ type ]
      properties:
        type:
          $ref: '#/components/schemas/CodedItem'
        title:
          type: string
          maxLength: 512
          description: Optional document title presented to recipients.

    # =======================
    # Responses & Errors
    # =======================

    MeshMessage:
      type: object
      required: [ messageId, status, timestamps ]
      properties:
        messageId:
          type: string
          description: Server-assigned id for tracking.
        status:
          type: string
          description: High-level lifecycle state.
          enum:
            - queued
            - delivered
            - failed
        routing:
          type: object
          properties:
            senderOdsCode: { type: string }
            destinationMeshMailboxId: { type: string }
        attempts:
          type: integer
          description: Number of delivery attempts performed.
          minimum: 0
          default: 0
        body:
          type: string
          description: >
            The persisted FHIR STU3 Message Bundle (XML)
        timestamps:
          type: object
          required: [ createdAt, updatedAt ]
          properties:
            createdAt: { type: string, format: date-time }
            updatedAt: { type: string, format: date-time }

    ErrorResponse:
      type: object
      required: [ error ]
      properties:
        error:
          type: object
          required: [ code, message ]
          properties:
            code:
              type: string
              enum:
                - VALIDATION_ERROR
                - IDEMPOTENCY_CONFLICT
                - FHIR_VALIDATION_FAILED
                - MESH_UPSTREAM_ERROR
                - SERVICE_UNAVAILABLE
                - SEND_TIMEOUT
            message: { type: string }
            details:
              type: object
              additionalProperties: true
              description: Optional structured details for debugging/field-level errors.
